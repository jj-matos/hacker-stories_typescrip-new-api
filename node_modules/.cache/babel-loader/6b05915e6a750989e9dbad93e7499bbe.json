{"ast":null,"code":"var _jsxFileName = \"/home/joao/Documents/02_MIND/05_IT/04_CODING/REACT/hacker-stories_new-hackernews-api+typescript/src/InputWithLabel.tsx\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledLabel = styled.label`\n  border-top: 1px solid #171212;\n  border-left: 1px solid #171212;\n  padding-left: 5px;\n  font-size: 24px;\n`;\n_c = StyledLabel;\nconst StyledInput = styled.input`\n  border: none;\n  border-bottom: 1px solid #171212;\n  background-color: transparent;\n  font-size: 24px;\n`;\n_c2 = StyledInput;\n\nconst InputWithLabel = _ref => {\n  _s();\n\n  let {\n    id,\n    value,\n    type = 'text',\n    onInputChange,\n    isFocused,\n    children\n  } = _ref;\n  const inputRef = React.useRef(null);\n  React.useEffect(() => {\n    if (isFocused && inputRef.current) {\n      inputRef.current.focus();\n    }\n  }, [isFocused]);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(StyledLabel, {\n      htmlFor: id,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(StyledInput, {\n      id: id,\n      ref: inputRef,\n      type: type,\n      value: value,\n      onChange: onInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(InputWithLabel, \"cBQ6FQ+sf5H+lvNONLKqtm4aeQ8=\");\n\n_c3 = InputWithLabel;\nexport { InputWithLabel };\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"StyledLabel\");\n$RefreshReg$(_c2, \"StyledInput\");\n$RefreshReg$(_c3, \"InputWithLabel\");","map":{"version":3,"sources":["/home/joao/Documents/02_MIND/05_IT/04_CODING/REACT/hacker-stories_new-hackernews-api+typescript/src/InputWithLabel.tsx"],"names":["React","styled","StyledLabel","label","StyledInput","input","InputWithLabel","id","value","type","onInputChange","isFocused","children","inputRef","useRef","useEffect","current","focus"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,OAAOC,MAAP,MAAmB,mBAAnB;;AAEA,MAAMC,WAAW,GAAGD,MAAM,CAACE,KAAM;AACjC;AACA;AACA;AACA;AACA,CALA;KAAMD,W;AAON,MAAME,WAAW,GAAGH,MAAM,CAACI,KAAM;AACjC;AACA;AACA;AACA;AACA,CALA;MAAMD,W;;AAgBN,MAAME,cAAc,GAAG,QAOI;AAAA;;AAAA,MAPH;AACtBC,IAAAA,EADsB;AAEtBC,IAAAA,KAFsB;AAGtBC,IAAAA,IAAI,GAAG,MAHe;AAItBC,IAAAA,aAJsB;AAKtBC,IAAAA,SALsB;AAMtBC,IAAAA;AANsB,GAOG;AACzB,QAAMC,QAAQ,GAAGb,KAAK,CAACc,MAAN,CAA+B,IAA/B,CAAjB;AAEAd,EAAAA,KAAK,CAACe,SAAN,CAAgB,MAAM;AACpB,QAAIJ,SAAS,IAAIE,QAAQ,CAACG,OAA1B,EAAmC;AACjCH,MAAAA,QAAQ,CAACG,OAAT,CAAiBC,KAAjB;AACD;AACF,GAJD,EAIG,CAACN,SAAD,CAJH;AAMA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,4BACE,QAAC,WAAD;AAAa,MAAA,OAAO,EAAEJ,EAAtB;AAAA,gBAA2BK;AAA3B;AAAA;AAAA;AAAA;AAAA,YADF,uBAGE,QAAC,WAAD;AACE,MAAA,EAAE,EAAEL,EADN;AAEE,MAAA,GAAG,EAAEM,QAFP;AAGE,MAAA,IAAI,EAAEJ,IAHR;AAIE,MAAA,KAAK,EAAED,KAJT;AAKE,MAAA,QAAQ,EAAEE;AALZ;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CA7BD;;GAAMJ,c;;MAAAA,c;AA+BN,SAASA,cAAT","sourcesContent":["import * as React from 'react';\n\nimport styled from 'styled-components';\n\nconst StyledLabel = styled.label`\n  border-top: 1px solid #171212;\n  border-left: 1px solid #171212;\n  padding-left: 5px;\n  font-size: 24px;\n`;\n\nconst StyledInput = styled.input`\n  border: none;\n  border-bottom: 1px solid #171212;\n  background-color: transparent;\n  font-size: 24px;\n`;\n\ntype InputWithLabelProps = {\n  id: string;\n  value: string;\n  type?: string;\n  onInputChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  isFocused?: boolean;\n  children: React.ReactNode;\n};\n\nconst InputWithLabel = ({\n  id,\n  value,\n  type = 'text',\n  onInputChange,\n  isFocused,\n  children,\n}: InputWithLabelProps) => {\n  const inputRef = React.useRef<HTMLInputElement>(null!);\n\n  React.useEffect(() => {\n    if (isFocused && inputRef.current) {\n      inputRef.current.focus();\n    }\n  }, [isFocused]);\n\n  return (\n    <React.Fragment>\n      <StyledLabel htmlFor={id}>{children}</StyledLabel>\n      &nbsp;\n      <StyledInput\n        id={id}\n        ref={inputRef}\n        type={type}\n        value={value}\n        onChange={onInputChange}\n      />\n    </React.Fragment>\n  );\n};\n\nexport { InputWithLabel }"]},"metadata":{},"sourceType":"module"}